# An example holesky testnet configuration

# Hex-encoded signer private key. This key should not be associated with an Ethereum address holding any funds.
EIGENDA_PROXY_EIGENDA_SIGNER_PRIVATE_KEY_HEX=

# JSON RPC node endpoint for the Ethereum network used for finalizing DA blobs. See available list here: https://docs.eigenlayer.xyz/eigenda/networks/
EIGENDA_PROXY_EIGENDA_ETH_RPC=https://ethereum-holesky-rpc.publicnode.com

# RPC URL of the EigenDA disperser service. Mainnet is `disperser.eigenda.xyz:443`).
# Full network list available in the documentation.
EIGENDA_PROXY_EIGENDA_DISPERSER_RPC=disperser-holesky.eigenda.xyz:443

# The deployed EigenDA service manager address. Mainnet is 0x870679E138bCdf293b7Ff14dD44b70FC97e12fc0
# All deployment addresses can be found here: https://github.com/Layr-Labs/eigenlayer-middleware/?tab=readme-ov-file#current-mainnet-deployment
EIGENDA_PROXY_EIGENDA_SERVICE_MANAGER_ADDR=0xD4A7E1Bd8015057293f0D0A557088c286942e84b

# Custom quorum IDs for writing blobs. Should not include default quorums 0 or 1.
EIGENDA_PROXY_EIGENDA_CUSTOM_QUORUM_IDS=

# Directory path to SRS tables
EIGENDA_PROXY_EIGENDA_TARGET_CACHE_PATH=resources/SRSTables

# The number of Ethereum blocks of confirmation that the DA briging transaction must have before it is assumed by the proxy to be final. 
# The value of `0` indicates that the proxy shouldn't wait for any confirmations, and 'finalized' indicates that the proxy should wait for finalization.
EIGENDA_PROXY_EIGENDA_CONFIRMATION_DEPTH=6

# Directory path to g1.point file
EIGENDA_PROXY_EIGENDA_TARGET_KZG_G1_PATH=resources/g1.point

# Directory path to g2.point.powerOf2 file
EIGENDA_PROXY_EIGENDA_TARGET_KZG_G2_POWER_OF_2_PATH=resources/g2.point.powerOf2

# Disable point verification mode. This mode performs IFFT on data before writing and FFT on data after reading. Disabling requires supplying the entire blob for verification against the KZG commitment.
EIGENDA_PROXY_EIGENDA_DISABLE_POINT_VERIFICATION_MODE=false

# Disable TLS for gRPC communication with the EigenDA disperser
EIGENDA_PROXY_EIGENDA_GRPC_DISABLE_TLS=false

# Maximum blob length to be written or read from EigenDA. Determines the number of SRS points loaded into memory for KZG commitments. Example units: '30MiB', '4Kb', '30MB'. Maximum size slightly exceeds 1GB.
EIGENDA_PROXY_EIGENDA_MAX_BLOB_LENGTH=16MiB

# Blob encoding version to use when writing blobs from the high-level interface
EIGENDA_PROXY_EIGENDA_PUT_BLOB_ENCODING_VERSION=0

# Interval between retries when awaiting network blob finalization
EIGENDA_PROXY_EIGENDA_STATUS_QUERY_INTERVAL=5s

# Total time to wait for a response from the EigenDA disperser
EIGENDA_PROXY_EIGENDA_RESPONSE_TIMEOUT=10s

# Duration to wait for a blob to finalize after being sent for dispersal
EIGENDA_PROXY_EIGENDA_STATUS_QUERY_TIMEOUT=30m0s

# Format the log output. Supported formats: 'text', 'terminal', 'logfmt', 'json', 'json-pretty'
EIGENDA_PROXY_LOG_FORMAT=text

# The lowest log level that will be output
EIGENDA_PROXY_LOG_LEVEL=INFO

# Whether to use mem-store for DA logic
EIGENDA_PROXY_MEMSTORE_ENABLED=false

# Duration that a blob/commitment pair are allowed to live
EIGENDA_PROXY_MEMSTORE_EXPIRATION=25m0s

# Metrics listening address
EIGENDA_PROXY_METRICS_ADDR=0.0.0.0

# Enable the metrics server
EIGENDA_PROXY_METRICS_ENABLED=false

# Metrics listening port
EIGENDA_PROXY_METRICS_PORT=7300

# access key id for S3 storage
EIGENDA_PROXY_S3_ACCESS_KEY_ID=

# access key secret for S3 storage
EIGENDA_PROXY_S3_ACCESS_KEY_SECRET=
          
# bucket name for S3 storage
EIGENDA_PROXY_S3_BUCKET=
          
# endpoint for S3 storage
EIGENDA_PROXY_S3_ENDPOINT=
