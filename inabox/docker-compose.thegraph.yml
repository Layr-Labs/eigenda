version: '3'
services:
  graph-node:
    image: graphprotocol/graph-node
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    depends_on:
      graph-node-ipfs:
        condition: service_healthy
      graph-node-postgres:
        condition: service_healthy
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      postgres_host: graph-node-postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: 'graph-node-ipfs:5001'
      ethereum: 'devnet:http://host.docker.internal:8545'
      GRAPH_LOG: info
    networks:
      - eigenda-demo
    healthcheck:
      test:
        - CMD
        - nc
        - -z
        - localhost
        - "8020"
      timeout: 5s
      interval: 1s
      retries: 240
      start_period: 1s

  graph-node-ipfs:
    image: ipfs/kubo:v0.14.0
    ports:
      - '5001:5001'
    # volumes:
    #   - ./data/ipfs:/data/ipfs
    networks:
      - eigenda-demo
    healthcheck:
      test:
        - CMD
        - nc
        - -z
        - localhost
        - "5001"
      timeout: 5s
      interval: 5s
      retries: 240
      start_period: 1s

  graph-node-postgres:
    image: postgres:14
    ports:
      - '5432:5432'
    command:
      [
        "postgres",
        "-cshared_preload_libraries=pg_stat_statements",
        "-cmax_connections=200"
      ]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    # volumes:
    #   - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d graph-node -U graph-node" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - eigenda-demo

networks:
  eigenda-demo:
    name: eigenda-demo