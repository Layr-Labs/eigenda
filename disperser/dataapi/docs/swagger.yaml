definitions:
  big.Int:
    type: object
  core.SecurityParam:
    properties:
      adversaryThreshold:
        description: AdversaryThreshold is the maximum amount of stake that can be
          controlled by an adversary in the quorum as a percentage of the total stake
          in the quorum
        type: integer
      confirmationThreshold:
        description: ConfirmationThreshold is the amount of stake that must sign a
          message for it to be considered valid as a percentage of the total stake
          in the quorum
        type: integer
      quorumID:
        type: integer
      quorumRate:
        description: |-
          Rate Limit. This is a temporary measure until the node can derive rates on its own using rollup authentication. This is used
          for restricting the rate at which retrievers are able to download data from the DA node to a multiple of the rate at which the
          data was posted to the DA node.
        type: integer
    type: object
  dataapi.BlobMetadataResponse:
    properties:
      batch_header_hash:
        type: string
      batch_id:
        type: integer
      batch_root:
        type: string
      blob_commitment:
        $ref: '#/definitions/encoding.BlobCommitments'
      blob_inclusion_proof:
        type: string
      blob_index:
        type: integer
      blob_key:
        type: string
      blob_status:
        $ref: '#/definitions/github_com_Layr-Labs_eigenda_disperser.BlobStatus'
      confirmation_block_number:
        type: integer
      confirmation_txn_hash:
        type: string
      fee:
        type: string
      reference_block_number:
        type: integer
      requested_at:
        type: integer
      security_params:
        items:
          $ref: '#/definitions/core.SecurityParam'
        type: array
      signatory_record_hash:
        type: string
    type: object
  dataapi.BlobsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/dataapi.BlobMetadataResponse'
        type: array
      meta:
        $ref: '#/definitions/dataapi.Meta'
    type: object
  dataapi.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  dataapi.Meta:
    properties:
      next_token:
        type: string
      size:
        type: integer
    type: object
  dataapi.Metric:
    properties:
      cost_in_gas:
        type: number
      throughput:
        type: number
      total_stake:
        allOf:
        - $ref: '#/definitions/big.Int'
        description: 'deprecated: use TotalStakePerQuorum instead. Remove when the
          frontend is updated.'
      total_stake_per_quorum:
        additionalProperties:
          $ref: '#/definitions/big.Int'
        type: object
    type: object
  dataapi.NonSigner:
    properties:
      count:
        type: integer
      operatorId:
        type: string
    type: object
  dataapi.OperatorNonsigningPercentageMetrics:
    properties:
      operator_address:
        type: string
      operator_id:
        type: string
      percentage:
        type: number
      quorum_id:
        type: integer
      stake_percentage:
        type: number
      total_batches:
        type: integer
      total_unsigned_batches:
        type: integer
    type: object
  dataapi.OperatorPortCheckResponse:
    properties:
      dispersal_online:
        type: boolean
      dispersal_socket:
        type: string
      operator_id:
        type: string
      retrieval_online:
        type: boolean
      retrieval_socket:
        type: string
    type: object
  dataapi.OperatorsNonsigningPercentage:
    properties:
      data:
        items:
          $ref: '#/definitions/dataapi.OperatorNonsigningPercentageMetrics'
        type: array
      meta:
        $ref: '#/definitions/dataapi.Meta'
    type: object
  dataapi.QueriedStateOperatorMetadata:
    properties:
      block_number:
        type: integer
      is_online:
        type: boolean
      operator_id:
        type: string
      operator_process_error:
        type: string
      socket:
        type: string
    type: object
  dataapi.QueriedStateOperatorsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/dataapi.QueriedStateOperatorMetadata'
        type: array
      meta:
        $ref: '#/definitions/dataapi.Meta'
    type: object
  dataapi.ServiceAvailability:
    properties:
      service_name:
        type: string
      service_status:
        type: string
    type: object
  dataapi.ServiceAvailabilityResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/dataapi.ServiceAvailability'
        type: array
      meta:
        $ref: '#/definitions/dataapi.Meta'
    type: object
  dataapi.Throughput:
    properties:
      throughput:
        type: number
      timestamp:
        type: integer
    type: object
  encoding.BlobCommitments:
    properties:
      commitment:
        $ref: '#/definitions/encoding.G1Commitment'
      length:
        type: integer
      length_commitment:
        $ref: '#/definitions/encoding.G2Commitment'
      length_proof:
        $ref: '#/definitions/encoding.LengthProof'
    type: object
  encoding.G1Commitment:
    properties:
      x:
        items:
          type: integer
        type: array
    type: object
  encoding.G2Commitment:
    properties:
      x:
        $ref: '#/definitions/github_com_consensys_gnark-crypto_ecc_bn254_internal_fptower.E2'
    type: object
  encoding.LengthProof:
    properties:
      x:
        $ref: '#/definitions/github_com_consensys_gnark-crypto_ecc_bn254_internal_fptower.E2'
    type: object
  github_com_Layr-Labs_eigenda_disperser.BlobStatus:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    type: integer
    x-enum-varnames:
    - Processing
    - Confirmed
    - Failed
    - Finalized
    - InsufficientSignatures
    - Dispersing
  github_com_consensys_gnark-crypto_ecc_bn254_internal_fptower.E2:
    properties:
      a0:
        items:
          type: integer
        type: array
    type: object
info:
  contact: {}
  description: This is the EigenDA Data Access API server.
  title: EigenDA Data Access API
  version: "1"
paths:
  /feed/batches/{batch_header_hash}/blobs:
    get:
      parameters:
      - description: Batch Header Hash
        in: path
        name: batch_header_hash
        required: true
        type: string
      - description: 'Limit [default: 10]'
        in: query
        name: limit
        type: integer
      - description: Next page token
        in: query
        name: next_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dataapi.BlobsResponse'
        "400":
          description: 'error: Bad request'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "404":
          description: 'error: Not found'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "500":
          description: 'error: Server error'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
      summary: Fetch blob metadata by batch header hash
      tags:
      - Feed
  /feed/blobs:
    get:
      parameters:
      - description: 'Limit [default: 10]'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dataapi.BlobsResponse'
        "400":
          description: 'error: Bad request'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "404":
          description: 'error: Not found'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "500":
          description: 'error: Server error'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
      summary: Fetch blobs metadata list
      tags:
      - Feed
  /feed/blobs/{blob_key}:
    get:
      parameters:
      - description: Blob Key
        in: path
        name: blob_key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dataapi.BlobMetadataResponse'
        "400":
          description: 'error: Bad request'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "404":
          description: 'error: Not found'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "500":
          description: 'error: Server error'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
      summary: Fetch blob metadata by blob key
      tags:
      - Feed
  /metrics:
    get:
      parameters:
      - description: 'Start unix timestamp [default: 1 hour ago]'
        in: query
        name: start
        type: integer
      - description: 'End unix timestamp [default: unix time now]'
        in: query
        name: end
        type: integer
      - description: 'Limit [default: 10]'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dataapi.Metric'
        "400":
          description: 'error: Bad request'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "404":
          description: 'error: Not found'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "500":
          description: 'error: Server error'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
      summary: Fetch metrics
      tags:
      - Metrics
  /metrics/batcher-service-availability:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dataapi.ServiceAvailabilityResponse'
        "400":
          description: 'error: Bad request'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "404":
          description: 'error: Not found'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "500":
          description: 'error: Server error'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
      summary: Get status of EigenDA batcher.
      tags:
      - Batcher Availability
  /metrics/churner-service-availability:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dataapi.ServiceAvailabilityResponse'
        "400":
          description: 'error: Bad request'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "404":
          description: 'error: Not found'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "500":
          description: 'error: Server error'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
      summary: Get status of EigenDA churner service.
      tags:
      - Churner ServiceAvailability
  /metrics/disperser-service-availability:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dataapi.ServiceAvailabilityResponse'
        "400":
          description: 'error: Bad request'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "404":
          description: 'error: Not found'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "500":
          description: 'error: Server error'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
      summary: Get status of EigenDA Disperser service.
      tags:
      - ServiceAvailability
  /metrics/non-signers:
    get:
      parameters:
      - description: 'Interval to query for non signers in seconds [default: 3600]'
        in: query
        name: interval
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dataapi.NonSigner'
            type: array
        "400":
          description: 'error: Bad request'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "404":
          description: 'error: Not found'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "500":
          description: 'error: Server error'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
      summary: Fetch non signers
      tags:
      - Metrics
  /metrics/operator-nonsigning-percentage:
    get:
      parameters:
      - description: 'Interval to query for operators nonsigning percentage [default:
          3600]'
        in: query
        name: interval
        type: integer
      - description: 'End time (2006-01-02T15:04:05Z) to query for operators nonsigning
          percentage [default: now]'
        in: query
        name: end
        type: string
      - description: 'Whether return only live nonsigners [default: true]'
        in: query
        name: live_only
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dataapi.OperatorsNonsigningPercentage'
        "400":
          description: 'error: Bad request'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "404":
          description: 'error: Not found'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "500":
          description: 'error: Server error'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
      summary: Fetch operators non signing percentage
      tags:
      - Metrics
  /metrics/throughput:
    get:
      parameters:
      - description: 'Start unix timestamp [default: 1 hour ago]'
        in: query
        name: start
        type: integer
      - description: 'End unix timestamp [default: unix time now]'
        in: query
        name: end
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dataapi.Throughput'
            type: array
        "400":
          description: 'error: Bad request'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "404":
          description: 'error: Not found'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "500":
          description: 'error: Server error'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
      summary: Fetch throughput time series
      tags:
      - Metrics
  /operators-info/deregistered-operators:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dataapi.QueriedStateOperatorsResponse'
        "400":
          description: 'error: Bad request'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "404":
          description: 'error: Not found'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "500":
          description: 'error: Server error'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
      summary: Fetch list of operators that have been deregistered for days. Days
        is a query parameter with a default value of 14 and max value of 30.
      tags:
      - OperatorsInfo
  /operators-info/port-check:
    get:
      parameters:
      - description: Operator ID
        in: query
        name: operator_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dataapi.OperatorPortCheckResponse'
        "400":
          description: 'error: Bad request'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "404":
          description: 'error: Not found'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "500":
          description: 'error: Server error'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
      summary: Operator node reachability port check
      tags:
      - OperatorsInfo
  /operators-info/registered-operators:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dataapi.QueriedStateOperatorsResponse'
        "400":
          description: 'error: Bad request'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "404":
          description: 'error: Not found'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
        "500":
          description: 'error: Server error'
          schema:
            $ref: '#/definitions/dataapi.ErrorResponse'
      summary: Fetch list of operators that have been registered for days. Days is
        a query parameter with a default value of 14 and max value of 30.
      tags:
      - OperatorsInfo
schemes:
- https
- http
swagger: "2.0"
