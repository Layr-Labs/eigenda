// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Layr-Labs/eigenda/core/payments/ondemand (interfaces: OnDemandPaymentVaultStateInterface)
//
// Generated by this command:
//
//	mockgen -package mock --destination ../../mock/ondemand_payment_vault_state.go . OnDemandPaymentVaultStateInterface
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	core "github.com/Layr-Labs/eigenda/core"
	ondemand "github.com/Layr-Labs/eigenda/core/payments/ondemand"
	common "github.com/ethereum/go-ethereum/common"
	gomock "go.uber.org/mock/gomock"
)

// MockOnDemandPaymentVaultStateInterface is a mock of OnDemandPaymentVaultStateInterface interface.
type MockOnDemandPaymentVaultStateInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOnDemandPaymentVaultStateInterfaceMockRecorder
	isgomock struct{}
}

// MockOnDemandPaymentVaultStateInterfaceMockRecorder is the mock recorder for MockOnDemandPaymentVaultStateInterface.
type MockOnDemandPaymentVaultStateInterfaceMockRecorder struct {
	mock *MockOnDemandPaymentVaultStateInterface
}

// NewMockOnDemandPaymentVaultStateInterface creates a new mock instance.
func NewMockOnDemandPaymentVaultStateInterface(ctrl *gomock.Controller) *MockOnDemandPaymentVaultStateInterface {
	mock := &MockOnDemandPaymentVaultStateInterface{ctrl: ctrl}
	mock.recorder = &MockOnDemandPaymentVaultStateInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOnDemandPaymentVaultStateInterface) EXPECT() *MockOnDemandPaymentVaultStateInterfaceMockRecorder {
	return m.recorder
}

// GetOnDemandPaymentByAccount mocks base method.
func (m *MockOnDemandPaymentVaultStateInterface) GetOnDemandPaymentByAccount(ctx context.Context, accountID common.Address) (*core.OnDemandPayment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOnDemandPaymentByAccount", ctx, accountID)
	ret0, _ := ret[0].(*core.OnDemandPayment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOnDemandPaymentByAccount indicates an expected call of GetOnDemandPaymentByAccount.
func (mr *MockOnDemandPaymentVaultStateInterfaceMockRecorder) GetOnDemandPaymentByAccount(ctx, accountID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOnDemandPaymentByAccount", reflect.TypeOf((*MockOnDemandPaymentVaultStateInterface)(nil).GetOnDemandPaymentByAccount), ctx, accountID)
}

// RefreshOnDemandPayments mocks base method.
func (m *MockOnDemandPaymentVaultStateInterface) RefreshOnDemandPayments(ctx context.Context) ([]ondemand.TotalDepositUpdate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RefreshOnDemandPayments", ctx)
	ret0, _ := ret[0].([]ondemand.TotalDepositUpdate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RefreshOnDemandPayments indicates an expected call of RefreshOnDemandPayments.
func (mr *MockOnDemandPaymentVaultStateInterfaceMockRecorder) RefreshOnDemandPayments(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RefreshOnDemandPayments", reflect.TypeOf((*MockOnDemandPaymentVaultStateInterface)(nil).RefreshOnDemandPayments), ctx)
}
