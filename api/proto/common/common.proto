syntax = "proto3";
package common;
option go_package = "github.com/Layr-Labs/eigenda/api/grpc/common";

// TODO: I generated the comments in this file using copilot. Reviewers, please verify accuracy,
// and after you do I will remove this comment. This PR should not merge until this comment is removed.

// G1Commitment represents a commitment to a field element in the G1 group of the BLS12-381 curve.
message G1Commitment {
  // The X coordinate of the KZG commitment. This is the raw byte representation of the field element.
  bytes x = 1;
  // The Y coordinate of the KZG commitment. This is the raw byte representation of the field element.
  bytes y = 2;
}

// BlobCommitment represents commitment of a specific blob, containing its
// KZG commitment, degree proof, the actual degree, and data length in number of symbols.
message BlobCommitment {
  // A commitment to the blob data.
  bytes commitment = 1;
  // A commitment to the degree of the polynomial used to generate the blob commitment.
  bytes length_commitment = 2;
  // A proof that the degree of the polynomial used to generate the blob commitment is valid.
  bytes length_proof = 3;
  // The degree of the polynomial used to generate the blob commitment. Must be a power of 2.
  uint32 length = 4;
}

message PaymentHeader {
  // The account ID of the disperser client. This should be a hex-encoded string of the ECSDA public key
  // corresponding to the key used by the client to sign the BlobHeader.
  string account_id = 1;
  // The reservation period of the dispersal request.
  uint32 reservation_period = 2;
  // The cumulative payment of the dispersal request. 
  bytes cumulative_payment = 3;
  // The salt of the disperser request. This is used to ensure that the payment header is intentionally unique.
  uint32 salt = 4;
}
