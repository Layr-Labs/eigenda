syntax = "proto3";
package lightnode;
import "common/common.proto";
option go_package = "github.com/Layr-Labs/eigenda/api/grpc/lightnode";

///////////////////////////////////////////////////////////////////////////////////
// Warning: light node APIs are currently in flux. This is not yet a stable API. //
///////////////////////////////////////////////////////////////////////////////////

service LightNode {
	// GetChunk retrieves a specific chunk held by the light node.
	rpc GetChunk(common.ChunkKey) returns (common.ChunkData) {}

	// StreamAvailabilityStatus streams the availability status of all chunks assigned to the light node.
	// For use by a DA node for monitoring the availability of chunks through its constellation of agent light nodes.
	rpc StreamAvailabilityStatus(StreamAvailabilityStatusRequest) returns (stream common.ChunkKey) {}
}

// A request from a DA node to an agent light node to stream the availability status of all chunks
// assigned to the light node.
message StreamAvailabilityStatusRequest {
	// TODO describe protocol for authentication
	bytes authentication_token = 1;
}