// Code generated by mockery v2.50.0. DO NOT EDIT.

package mock

import (
	"context"

	"github.com/Layr-Labs/eigenda/api/clients/v2/verification"
	"github.com/stretchr/testify/mock"
)

// MockCertVerifier is an autogenerated mock type for the MockCertVerifier type
type MockCertVerifier struct {
	mock.Mock
}

// VerifyCertV2 provides a mock function with given fields: ctx, eigenDACert
func (_m *MockCertVerifier) VerifyCertV2(ctx context.Context, eigenDACert *verification.EigenDACert) error {
	ret := _m.Called(ctx, eigenDACert)

	if len(ret) == 0 {
		panic("no return value specified for VerifyCertV2")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *verification.EigenDACert) error); ok {
		r0 = rf(ctx, eigenDACert)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockCertVerifier creates a new instance of MockCertVerifier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockCertVerifier(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockCertVerifier {
	mock := &MockCertVerifier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
