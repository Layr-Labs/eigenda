// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.23.4
// source: controller/controller.proto

package controller

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ControllerInternal_GetValidatorSigningRate_FullMethodName     = "/controller.ControllerInternal/GetValidatorSigningRate"
	ControllerInternal_GetValidatorSigningRateDump_FullMethodName = "/controller.ControllerInternal/GetValidatorSigningRateDump"
)

// ControllerInternalClient is the client API for ControllerInternal service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ControllerInternalClient interface {
	// GetValidatorSigningRate returns the signing rate of a validator during a time range.
	GetValidatorSigningRate(ctx context.Context, in *GetValidatorSigningRateRequest, opts ...grpc.CallOption) (*GetValidatorSigningRateReply, error)
	// Request a dump of signing rate data for all validators after a specified start time.
	GetValidatorSigningRateDump(ctx context.Context, in *GetValidatorSigningRateDumpRequest, opts ...grpc.CallOption) (*GetValidatorSigningRateDumpReply, error)
}

type controllerInternalClient struct {
	cc grpc.ClientConnInterface
}

func NewControllerInternalClient(cc grpc.ClientConnInterface) ControllerInternalClient {
	return &controllerInternalClient{cc}
}

func (c *controllerInternalClient) GetValidatorSigningRate(ctx context.Context, in *GetValidatorSigningRateRequest, opts ...grpc.CallOption) (*GetValidatorSigningRateReply, error) {
	out := new(GetValidatorSigningRateReply)
	err := c.cc.Invoke(ctx, ControllerInternal_GetValidatorSigningRate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerInternalClient) GetValidatorSigningRateDump(ctx context.Context, in *GetValidatorSigningRateDumpRequest, opts ...grpc.CallOption) (*GetValidatorSigningRateDumpReply, error) {
	out := new(GetValidatorSigningRateDumpReply)
	err := c.cc.Invoke(ctx, ControllerInternal_GetValidatorSigningRateDump_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ControllerInternalServer is the server API for ControllerInternal service.
// All implementations must embed UnimplementedControllerInternalServer
// for forward compatibility
type ControllerInternalServer interface {
	// GetValidatorSigningRate returns the signing rate of a validator during a time range.
	GetValidatorSigningRate(context.Context, *GetValidatorSigningRateRequest) (*GetValidatorSigningRateReply, error)
	// Request a dump of signing rate data for all validators after a specified start time.
	GetValidatorSigningRateDump(context.Context, *GetValidatorSigningRateDumpRequest) (*GetValidatorSigningRateDumpReply, error)
	mustEmbedUnimplementedControllerInternalServer()
}

// UnimplementedControllerInternalServer must be embedded to have forward compatible implementations.
type UnimplementedControllerInternalServer struct {
}

func (UnimplementedControllerInternalServer) GetValidatorSigningRate(context.Context, *GetValidatorSigningRateRequest) (*GetValidatorSigningRateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidatorSigningRate not implemented")
}
func (UnimplementedControllerInternalServer) GetValidatorSigningRateDump(context.Context, *GetValidatorSigningRateDumpRequest) (*GetValidatorSigningRateDumpReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidatorSigningRateDump not implemented")
}
func (UnimplementedControllerInternalServer) mustEmbedUnimplementedControllerInternalServer() {}

// UnsafeControllerInternalServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ControllerInternalServer will
// result in compilation errors.
type UnsafeControllerInternalServer interface {
	mustEmbedUnimplementedControllerInternalServer()
}

func RegisterControllerInternalServer(s grpc.ServiceRegistrar, srv ControllerInternalServer) {
	s.RegisterService(&ControllerInternal_ServiceDesc, srv)
}

func _ControllerInternal_GetValidatorSigningRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetValidatorSigningRateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerInternalServer).GetValidatorSigningRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ControllerInternal_GetValidatorSigningRate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerInternalServer).GetValidatorSigningRate(ctx, req.(*GetValidatorSigningRateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ControllerInternal_GetValidatorSigningRateDump_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetValidatorSigningRateDumpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerInternalServer).GetValidatorSigningRateDump(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ControllerInternal_GetValidatorSigningRateDump_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerInternalServer).GetValidatorSigningRateDump(ctx, req.(*GetValidatorSigningRateDumpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ControllerInternal_ServiceDesc is the grpc.ServiceDesc for ControllerInternal service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ControllerInternal_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "controller.ControllerInternal",
	HandlerType: (*ControllerInternalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetValidatorSigningRate",
			Handler:    _ControllerInternal_GetValidatorSigningRate_Handler,
		},
		{
			MethodName: "GetValidatorSigningRateDump",
			Handler:    _ControllerInternal_GetValidatorSigningRateDump_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "controller/controller.proto",
}
