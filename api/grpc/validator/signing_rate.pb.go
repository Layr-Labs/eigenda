// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.4
// source: validator/signing_rate.proto

package validator

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Records information about validator signing rate during a time period.
type ValidatorSigningRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique identifier of the validator (i.e. the operator ID).
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The number of signed by the validator during the period.
	SignedBatches uint64 `protobuf:"varint,2,opt,name=signed_batches,json=signedBatches,proto3" json:"signed_batches,omitempty"`
	// The number of unsigned by the validator during the period.
	UnsignedBatches uint64 `protobuf:"varint,3,opt,name=unsigned_batches,json=unsignedBatches,proto3" json:"unsigned_batches,omitempty"`
	// The total number of bytes signed during the period.
	SignedBytes uint64 `protobuf:"varint,4,opt,name=signed_bytes,json=signedBytes,proto3" json:"signed_bytes,omitempty"`
	// The total number of bytes unsigned during the period.
	UnsignedBytes uint64 `protobuf:"varint,5,opt,name=unsigned_bytes,json=unsignedBytes,proto3" json:"unsigned_bytes,omitempty"`
	// Contains the sum of the time spent by the validator waiting for signing requests to be processed, in nanoseconds.
	// Only batches that are signed are considered (i.e. if the validator does not succeed in signing a batch,
	// the time spend in the attempt is not counted).
	SigningLatency uint64 `protobuf:"varint,6,opt,name=signing_latency,json=signingLatency,proto3" json:"signing_latency,omitempty"`
}

func (x *ValidatorSigningRate) Reset() {
	*x = ValidatorSigningRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validator_signing_rate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorSigningRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorSigningRate) ProtoMessage() {}

func (x *ValidatorSigningRate) ProtoReflect() protoreflect.Message {
	mi := &file_validator_signing_rate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorSigningRate.ProtoReflect.Descriptor instead.
func (*ValidatorSigningRate) Descriptor() ([]byte, []int) {
	return file_validator_signing_rate_proto_rawDescGZIP(), []int{0}
}

func (x *ValidatorSigningRate) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ValidatorSigningRate) GetSignedBatches() uint64 {
	if x != nil {
		return x.SignedBatches
	}
	return 0
}

func (x *ValidatorSigningRate) GetUnsignedBatches() uint64 {
	if x != nil {
		return x.UnsignedBatches
	}
	return 0
}

func (x *ValidatorSigningRate) GetSignedBytes() uint64 {
	if x != nil {
		return x.SignedBytes
	}
	return 0
}

func (x *ValidatorSigningRate) GetUnsignedBytes() uint64 {
	if x != nil {
		return x.UnsignedBytes
	}
	return 0
}

func (x *ValidatorSigningRate) GetSigningLatency() uint64 {
	if x != nil {
		return x.SigningLatency
	}
	return 0
}

// Signing rate information about validators during a particular time bucket.
type SigningRateBucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The start time of the bucket in seconds since Unix epoch.
	StartTimestamp uint64 `protobuf:"varint,1,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	// The end time of the bucket in seconds since Unix epoch.
	EndTimestamp uint64 `protobuf:"varint,2,opt,name=end_timestamp,json=endTimestamp,proto3" json:"end_timestamp,omitempty"`
	// The signing rates of individual validators during the bucket period.
	ValidatorSigningRates []*ValidatorSigningRate `protobuf:"bytes,3,rep,name=validator_signing_rates,json=validatorSigningRates,proto3" json:"validator_signing_rates,omitempty"`
}

func (x *SigningRateBucket) Reset() {
	*x = SigningRateBucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_validator_signing_rate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigningRateBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningRateBucket) ProtoMessage() {}

func (x *SigningRateBucket) ProtoReflect() protoreflect.Message {
	mi := &file_validator_signing_rate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningRateBucket.ProtoReflect.Descriptor instead.
func (*SigningRateBucket) Descriptor() ([]byte, []int) {
	return file_validator_signing_rate_proto_rawDescGZIP(), []int{1}
}

func (x *SigningRateBucket) GetStartTimestamp() uint64 {
	if x != nil {
		return x.StartTimestamp
	}
	return 0
}

func (x *SigningRateBucket) GetEndTimestamp() uint64 {
	if x != nil {
		return x.EndTimestamp
	}
	return 0
}

func (x *SigningRateBucket) GetValidatorSigningRates() []*ValidatorSigningRate {
	if x != nil {
		return x.ValidatorSigningRates
	}
	return nil
}

var File_validator_signing_rate_proto protoreflect.FileDescriptor

var file_validator_signing_rate_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x73, 0x69, 0x67, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0xeb, 0x01, 0x0a, 0x14, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0f, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x75, 0x6e,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x22, 0xb7, 0x01, 0x0a, 0x11, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67,
	0x52, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x54, 0x0a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x67, 0x6e,
	0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x52, 0x15, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x73, 0x42, 0x31,
	0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c, 0x61, 0x79,
	0x72, 0x2d, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x65, 0x69, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_validator_signing_rate_proto_rawDescOnce sync.Once
	file_validator_signing_rate_proto_rawDescData = file_validator_signing_rate_proto_rawDesc
)

func file_validator_signing_rate_proto_rawDescGZIP() []byte {
	file_validator_signing_rate_proto_rawDescOnce.Do(func() {
		file_validator_signing_rate_proto_rawDescData = protoimpl.X.CompressGZIP(file_validator_signing_rate_proto_rawDescData)
	})
	return file_validator_signing_rate_proto_rawDescData
}

var file_validator_signing_rate_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_validator_signing_rate_proto_goTypes = []interface{}{
	(*ValidatorSigningRate)(nil), // 0: common.ValidatorSigningRate
	(*SigningRateBucket)(nil),    // 1: common.SigningRateBucket
}
var file_validator_signing_rate_proto_depIdxs = []int32{
	0, // 0: common.SigningRateBucket.validator_signing_rates:type_name -> common.ValidatorSigningRate
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_validator_signing_rate_proto_init() }
func file_validator_signing_rate_proto_init() {
	if File_validator_signing_rate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_validator_signing_rate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorSigningRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_validator_signing_rate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigningRateBucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_validator_signing_rate_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_validator_signing_rate_proto_goTypes,
		DependencyIndexes: file_validator_signing_rate_proto_depIdxs,
		MessageInfos:      file_validator_signing_rate_proto_msgTypes,
	}.Build()
	File_validator_signing_rate_proto = out.File
	file_validator_signing_rate_proto_rawDesc = nil
	file_validator_signing_rate_proto_goTypes = nil
	file_validator_signing_rate_proto_depIdxs = nil
}
