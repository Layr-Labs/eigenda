# This .env.example file only describes the mandatory flags that must be set when running the EigenDA proxy.
# All flags that are optional and have sane default values are omitted for brevity.
# For a full list of flags, please refer to the output of `eigenda-proxy --help`,
# which is also available at https://github.com/Layr-Labs/eigenda/blob/master/api/proxy/docs/help_out.txt.

# === Storage Configuration ===

# The storage backends to enable. Options are [V1, V2]
# The contents of this field dictate whether the structures to support the given backend are instantiated or not.
# Reasons to include both V1 and V2 include:
# - You're dispersing to one, but still want to support reads from the other.
# - You want to change which backend you are dispersing to on the fly, i.e. you're migrating from V1 to V2. 
#   So everything would be going through V1 at first, but the necessary structures would exist to switch to V2 dispersals, without requiring a restart.
EIGENDA_PROXY_STORAGE_BACKENDS_TO_ENABLE=V1,V2

# Target EigenDA backend version (V1 or V2) for blob dispersals (POST routes).
# The backend chosen here must be enabled in `EIGENDA_PROXY_STORAGE_BACKENDS_TO_ENABLE`.
EIGENDA_PROXY_STORAGE_DISPERSAL_BACKEND=V2

# Caching stores to enable. Options are [s3].
# Make sure to populate their respective environment variables if you enable them.
EIGENDA_PROXY_STORAGE_CACHE_TARGETS=""

# === V2 Configuration ===

# Hex-encoded signer private key for payments with EigenDA V2 disperser.
EIGENDA_PROXY_EIGENDA_V2_SIGNER_PRIVATE_KEY_HEX="0000000000000000000100000000000000000000000000000000000000000000"

# JSON RPC node endpoint for the Ethereum network.
EIGENDA_PROXY_EIGENDA_V2_ETH_RPC=https://ethereum-sepolia.rpc.subquery.network/public

# The EigenDA network to run on. One of [mainnet, holesky_testnet, holesky_preprod, sepolia_testnet].
# This populates default values for other flags (disperser URL and contract addresses).
# It is optional (those other flags can be set manually), but recommended.
EIGENDA_PROXY_EIGENDA_V2_NETWORK=sepolia_testnet

# Maximum blob length for V2. This value is permitted to be up to 16MiB
# This value is configured to be lower than the permitted maximum, since this configuration determines the amount of
# SRS data that will be read into memory. Reading in a large amount of SRS data can cause long startup times, and since
# you only actually need to read the amount of SRS data that corresponds to the size of the largest blob that will be
# sent, decreasing this value is a crude sort of optimization.
# Note that this value is NOT the maximum payload size, because of encoding overhead.
# See https://github.com/Layr-Labs/eigenda/blob/e5f489aae3/encoding/utils/codec/README.md for more details.
EIGENDA_PROXY_EIGENDA_V2_MAX_BLOB_LENGTH=1MiB

# Address of the EigenDACertVerifierRouter contract, or of an immutable EigenDACertVerifier contract of version >= 3.
# This is required for performing eth_calls to verify EigenDA certificates, as well as fetching
# required_quorums and signature_thresholds needed when creating new EigenDA certificates during dispersals (POST routes).
#
# See https://layr-labs.github.io/eigenda/integration/spec/6-secure-integration.html#upgradable-quorums-and-thresholds-for-optimistic-verification
# for more details.
EIGENDA_PROXY_EIGENDA_V2_CERT_VERIFIER_ROUTER_OR_IMMUTABLE_VERIFIER_ADDR=0x58D2B844a894f00b7E6F9F492b9F43aD54Cd4429

# Allowed distance (in L1 blocks) between the eigenDA cert's reference block number (RBN)
# and the L1 block number at which the cert was included in the rollup's batch inbox.
# A cert is considered valid if certL1InclusionBlock <= cert.RBN + rbnRecencyWindowSize,
# otherwise an HTTP 418 (TEAPOT) error is returned to indicate that is should be dropped.

# This check is optional and will be skipped when set to 0.
# For secure integrations, this value should NOT be set to 0, as it is used to prevent malicious batchers
# from submitting old certs that can block the derivation pipeline and cause a denial of service to the rollup.
# For OP rollups, we recommend setting this value to the same value as the sequencer_window_size in the OP stack.
#
# See https://layr-labs.github.io/eigenda/integration/spec/6-secure-integration.html#1-rbn-recency-validation
# for more details.
EIGENDA_PROXY_EIGENDA_V2_RBN_RECENCY_WINDOW_SIZE=0

# === V1 Configuration ===

# Hex-encoded signer private key for V1
EIGENDA_PROXY_EIGENDA_SIGNER_PRIVATE_KEY_HEX="0000000000000000000100000000000000000000000000000000000000000000"

# JSON RPC node endpoint for the Ethereum network
EIGENDA_PROXY_EIGENDA_ETH_RPC=https://ethereum-sepolia.rpc.subquery.network/public

# RPC URL of the EigenDA disperser service for V1
EIGENDA_PROXY_EIGENDA_DISPERSER_RPC=disperser-testnet-sepolia.eigenda.xyz:443

# The deployed EigenDA service manager address for V1
EIGENDA_PROXY_EIGENDA_SERVICE_MANAGER_ADDR=0x3a5acf46ba6890B8536420F4900AC9BC45Df4764

# Custom quorum IDs for writing blobs. Should not include default quorums 0 or 1.
EIGENDA_PROXY_EIGENDA_CUSTOM_QUORUM_IDS=

# The number of Ethereum blocks of confirmation
EIGENDA_PROXY_EIGENDA_CONFIRMATION_DEPTH=6

# Maximum blob length for V1. This value is permitted to be up to 16MiB
# This value is configured to be lower than the permitted maximum, since this configuration determines the amount of
# SRS data that will be read into memory. Reading in a large amount of SRS data can cause long startup times, and since
# you only actually need to read the amount of SRS data that corresponds to the size of the largest blob that will be
# sent, decreasing this value is a crude sort of optimization.
EIGENDA_PROXY_EIGENDA_MAX_BLOB_LENGTH=1MiB
