MAIN_SERVICE_IMAGE=ghcr.io/layr-labs/eigenda/opr-node:2.2.0
NETWORK_NAME=eigenda-network
MAIN_SERVICE_NAME=eigenda-native-node

# These are used for testing purpose
NODE_TEST_PRIVATE_BLS=
NODE_PRIVATE_KEY=

# EigenDA specific configs
NODE_EXPIRATION_POLL_INTERVAL=180
NODE_CACHE_ENCODED_BLOBS=true
NODE_NUM_WORKERS=1
NODE_DISPERSAL_PORT=32005
NODE_V2_DISPERSAL_PORT=32006

# This flag defines a runtime mode. Acceptable inputs are v1-only, v2-only, v1-and-v2
NODE_RUNTIME_MODE=v1-and-v2

# This is a dummy value for now. This won't be used as we are explicitly asking for quorum while opting in/out
# In future release, this will be removed
NODE_QUORUM_ID_LIST=0

NODE_VERBOSE=true
NODE_RETRIEVAL_PORT=32004
NODE_V2_RETRIEVAL_PORT=32007
NODE_TIMEOUT=20s
NODE_SRS_ORDER=268435456
NODE_SRS_LOAD=8388608

# If you are using a reverse proxy in a shared network space, the reverse proxy should listen at $NODE_DISPERSAL_PORT
# and forward the traffic to $NODE_INTERNAL_DISPERSAL_PORT, and similarly for retrieval. The DA node will register the
# $NODE_DISPERSAL_PORT port on the chain and listen for the reverse proxy at $NODE_INTERNAL_DISPERSAL_PORT.
NODE_INTERNAL_DISPERSAL_PORT=${NODE_DISPERSAL_PORT}
NODE_INTERNAL_RETRIEVAL_PORT=${NODE_RETRIEVAL_PORT}
NODE_INTERNAL_V2_DISPERSAL_PORT=${NODE_V2_DISPERSAL_PORT}
NODE_INTERNAL_V2_RETRIEVAL_PORT=${NODE_V2_RETRIEVAL_PORT}

# Reachability Check
NODE_REACHABILITY_POLL_INTERVAL=60
NODE_DATAAPI_URL=https://dataapi.eigenda.xyz

# EigenDA mounted locations
NODE_ECDSA_KEY_FILE=/app/operator_keys/ecdsa_key.json
NODE_BLS_KEY_FILE=/app/operator_keys/bls_key.json
NODE_G1_PATH=/app/g1.point
NODE_G2_POWER_OF_2_PATH=/app/g2.point.powerOf2
NODE_CACHE_PATH=/app/cache
NODE_LOG_PATH=/app/logs/opr.log
NODE_DB_PATH=/data/operator/db

# Node logs configs
NODE_LOG_LEVEL=debug
NODE_LOG_FORMAT=text

# Metrics specific configs
NODE_ENABLE_METRICS=true
NODE_METRICS_PORT=9092

# Node API specific configs
NODE_ENABLE_NODE_API=true
NODE_API_PORT=9091

# mainnet smart contracts
NODE_EIGENDA_SERVICE_MANAGER=0x870679E138bCdf293b7Ff14dD44b70FC97e12fc0
NODE_BLS_OPERATOR_STATE_RETRIVER=0xD5D7fB4647cE79740E6e83819EFDf43fa74F8C31

# Churner URL
NODE_CHURNER_URL=churner.eigenda.xyz:443

# The name of the header used to get the client IP address
# If set to empty string, the IP address will be taken from the connection.
# The rightmost value of the header will be used.
NODE_CLIENT_IP_HEADER=x-real-ip
# How often to check the public IP address of the node. Set this to 0 to disable
# automatic IP address updating (if you have a stable IP address)
NODE_PUBLIC_IP_CHECK_INTERVAL=10s

###############################################################################
####### TODO: Operators please update below values for your node ##############
###############################################################################
# TODO: IP of your node
NODE_HOSTNAME=localhost

# TODO: Node Nginx config
NODE_NGINX_CONF_HOST=../resources/rate-limit-nginx.conf

# TODO: Operators need to point this to a working chain rpc
NODE_CHAIN_RPC=
NODE_CHAIN_ID=1

# TODO: Operators need to update this to their own paths
USER_HOME=/home/ubuntu
EIGENLAYER_HOME=${USER_HOME}/.eigenlayer
EIGENDA_HOME=${EIGENLAYER_HOME}/eigenda/mainnet

NODE_LOG_PATH_HOST=${EIGENDA_HOME}/logs
NODE_G1_PATH_HOST=${USER_HOME}/eigenda-operator-setup/resources/g1.point
NODE_G2_PATH_HOST=${USER_HOME}/eigenda-operator-setup/resources/g2.point.powerOf2
NODE_DB_PATH_HOST=${EIGENDA_HOME}/db
NODE_CACHE_PATH_HOST=${USER_HOME}/eigenda-operator-setup/resources/cache

# TODO: Operators need to update this to their own keys
NODE_ECDSA_KEY_FILE_HOST=${EIGENLAYER_HOME}/operator_keys/opr.ecdsa.key.json
NODE_BLS_KEY_FILE_HOST=${EIGENLAYER_HOME}/operator_keys/opr.bls.key.json
# TODO: Uncomment and update if using remote BLS signer https://github.com/Layr-Labs/cerberus
#NODE_BLS_SIGNER_CERT_FILE=/app/cerberus/cerberus.crt # DO NOT CHANGE THIS
#NODE_BLS_REMOTE_SIGNER_ENABLED=true
#NODE_BLS_REMOTE_SIGNER_URL=<host:port>
#NODE_BLS_SIGNER_API_KEY=<api key for remote signer>
#NODE_BLS_PUBLIC_KEY_HEX=<public key registered with remote signer>
#NODE_BLS_SIGNER_CERT_FILE_HOST=<path to cert file on host>

# TODO: The ip provider service used to obtain a node's public IP [seeip (default), ipify)
NODE_PUBLIC_IP_PROVIDER=seeip

# TODO: Operators need to add password to decrypt the above keys
# If you have some special characters in password, make sure to use single quotes
NODE_ECDSA_KEY_PASSWORD=''
NODE_BLS_KEY_PASSWORD=''
