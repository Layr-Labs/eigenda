name: docker-publish-internal
on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

env:
  # TODO: Push to AWS CR at a later stage
  REGISTRY: ghcr.io

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          driver-opts: >-
            image=moby/buildkit:master

      - name: Cache main image layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build And Push Images
      - name: Build Docker images
        run: docker buildx bake ci-release
      - name: Push Docker images
        if: github.ref == 'refs/heads/master'
        run: docker buildx bake ci-release --push

      - name: Send GitHub Action trigger data to Slack workflow
        if: ${{ failure() }}
        id: slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "workflow": "${{ github.workflow }}",
              "action_name": "${{ github.action }}",
              "ref": "${{ github.ref_name }}",
              "actor": "${{ github.triggering_actor }}",
              "event_name": "${{ github.event_name }}",
              "run_id": "https://github.com/Layr-Labs/eigenda/actions/runs/${{ github.run_id }}",
              "commit_sha": "https://github.com/Layr-Labs/eigenda/commit/${{ github.sha }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
