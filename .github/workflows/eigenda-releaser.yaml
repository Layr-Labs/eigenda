name: eigenda releaser

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version for the release'
        required: true
        type: string
      source_branch:
        description: 'Branch to release from (must be "master" or start with "release/")'
        required: true
        type: string
        default: master

permissions:
  contents: write

jobs:
  wait-for-approval:
    runs-on: ubuntu-latest
    environment:
      name: eigenda-release-environment

    steps:
      - name: Generate a token
        id: generate_token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # 2.0.6
        with:
          app-id: ${{ secrets.EIGENDA_RELEASER_ID }}
          private-key: ${{ secrets.EIGENDA_RELEASER_KEY }}

      - name: Validate source_branch input
        run: |
          src="${{ github.event.inputs.source_branch }}"
          if [[ "$src" != "master" && ! "$src" =~ ^release\/.+$ ]]; then
            echo "Error: source_branch must be 'master' or start with 'release/'"
            exit 1
          fi
          echo "Source branch validation passed: $src"

      - name: Verify source branch exists on remote
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          src="${{ github.event.inputs.source_branch }}"
          # Ensure we have access and can see remote heads
          git ls-remote --heads https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }} "$src" | grep -q "$src"
          if [[ $? -ne 0 ]]; then
            echo "Error: Branch '$src' does not exist on origin"
            exit 1
          fi
          echo "Verified branch '$src' exists on origin"

      - name: Checkout source branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          token: ${{ steps.generate_token.outputs.token }}
          ref: ${{ github.event.inputs.source_branch }}
          fetch-depth: 0

      - name: Validate version format
        run: |
          version="${{ github.event.inputs.version }}"
          if [[ ! "$version" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must be in format x.y.z (e.g., 1.2.3)"
            exit 1
          fi
          echo "Version format is valid: $version"

      - name: Check if release branch already exists
        run: |
          version="${{ github.event.inputs.version }}"
          git fetch origin "+refs/heads/*:refs/remotes/origin/*"
          if git branch -r | grep -q "origin/release/$version$"; then
            echo "Error: Release branch release/$version already exists"
            exit 1
          fi
          echo "Release branch for version $version is available"

      - name: Create and push release branch
        run: |
          version="${{ github.event.inputs.version }}"
          git config --global user.name "releaser-bot"
          git checkout -b "release/$version"
          git push origin "release/$version"
