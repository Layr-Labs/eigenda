name: docker-publish-release

on:
  push:
    tags:
      - v*
    branches:
      - master
  workflow_dispatch:
    inputs:
      force:
        description: "Force untagged release (expert mode)"
        required: false
        default: false
        type: boolean

env:
  REGISTRY: ghcr.io
  CACHE-FROM: /tmp/.buildx-cache
  CACHE-TO: /tmp/.buildx-cache-new

jobs:
  # Calculate version once for all jobs
  semver:
    runs-on: ubuntu-latest
    outputs:
      semver: ${{ steps.gitversion.outputs.fullSemVer }}
      should-push: ${{ steps.check-push.outputs.should-push }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #4.2.2
      with:
        fetch-depth: 0

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v1.1.1
      with:
        versionSpec: '5.x'

    - name: Determine SemVer
      id: gitversion
      uses: gittools/actions/gitversion/execute@v1.1.1
      with:
        useConfigFile: true

    - name: Display SemVer
      run: echo "SemVer ${{ steps.gitversion.outputs.fullSemVer }} Forced ${{ github.event.inputs.force }}"

    - name: Check if should push
      id: check-push
      run: |
        if [[ "${{ github.ref }}" == refs/tags/v* ]] || [[ "${{ github.event.inputs.force }}" == "true" ]]; then
          echo "should-push=true" >> $GITHUB_OUTPUT
        else
          echo "should-push=false" >> $GITHUB_OUTPUT
        fi

  # Build on platform-specific runners
  build-platform:
    needs: semver
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
          - platform: linux/arm64
            runner: linux2xl-2-arm
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #4.2.2
      with:
        fetch-depth: 0

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        install: true
        driver-opts: image=moby/buildkit:master

    - name: Cache docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-${{ matrix.platform }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.platform }}-buildx-

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set PUSH_FLAG
      run: echo "PUSH_FLAG=--push" >> $GITHUB_ENV
      if: needs.semver.outputs.should-push == 'true'

    - name: Build and push platform-specific images
      run: |
        # Use architecture suffix in SEMVER for platform-specific tags
        SEMVER="${{ needs.semver.outputs.semver }}-${{ matrix.platform == 'linux/amd64' && 'amd64' || 'arm64' }}" \
        PUSH_FLAG="${PUSH_FLAG}" \
        PLATFORM_FLAG="--set *.platform=${{ matrix.platform }}" \
        make docker-release-build

  # Combine platform images into multi-arch manifests
  combine-manifests:
    needs: [semver, build-platform]
    if: needs.semver.outputs.should-push == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create and push multi-arch manifests
      run: |
        REGISTRY="${{ env.REGISTRY }}"
        BASE_TAG="${{ needs.semver.outputs.semver }}"

        # Create manifests for node-group-release images
        for IMAGE in "opr-node" "opr-nodeplugin"; do
          docker manifest create \
            "${REGISTRY}/layr-labs/eigenda/${IMAGE}:${BASE_TAG}" \
            "${REGISTRY}/layr-labs/eigenda/${IMAGE}:${BASE_TAG}-amd64" \
            "${REGISTRY}/layr-labs/eigenda/${IMAGE}:${BASE_TAG}-arm64"

          docker manifest push "${REGISTRY}/layr-labs/eigenda/${IMAGE}:${BASE_TAG}"
          echo "Created multi-arch manifest for layr-labs/eigenda/${IMAGE}:${BASE_TAG}"
        done

        # Create manifest for proxy-release (different repo path)
        docker manifest create \
          "${REGISTRY}/layr-labs/eigenda-proxy:${BASE_TAG}" \
          "${REGISTRY}/layr-labs/eigenda-proxy:${BASE_TAG}-amd64" \
          "${REGISTRY}/layr-labs/eigenda-proxy:${BASE_TAG}-arm64"

        docker manifest push "${REGISTRY}/layr-labs/eigenda-proxy:${BASE_TAG}"
        echo "Created multi-arch manifest for layr-labs/eigenda-proxy:${BASE_TAG}"
